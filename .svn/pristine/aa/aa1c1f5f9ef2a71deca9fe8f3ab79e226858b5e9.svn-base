package com.eye2web.infosys.controller;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.eye2web.infosys.bean.LoginBean;
import com.eye2web.infosys.dto.InfoFileDto;
import com.eye2web.infosys.service.SampleService;
import com.eye2web.infosys.util.CommonUtil;

@Controller
public class SampleController
{
	private static Logger logger = Logger.getLogger(SampleController.class);

	@Autowired
	private SampleService sampleService;

	private CommonUtil commonUtil;

	private HttpSession session;

	private LoginBean loginBean;

	private String userId;

	/**
	 * @desc 리스트 보기
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/sample/list.info")
	public ModelAndView list(HttpServletRequest request, HttpServletResponse response)
	{
		userId = loginBean.getUserId();
		//userId = (String)session.getAttribute("userId");
		ModelAndView mav = new ModelAndView();

		if(userId != null && userId != "") {
			List<Map> list = sampleService.getList();
			mav.setViewName("/sample/list");
			mav.addObject("result", list);
		} else {
			Map<String, Object> errorMap = new HashMap<String, Object>();
			errorMap.put("msg", "로그인이 필요한 서비스입니다.");
			errorMap.put("url", "/login/login.info");
			mav.addObject("errorMap", errorMap);
			mav.setViewName("/common/error");
		}

		return mav;
	}

	/**
	 * @desc 글 작성
	 * @param request
	 * @param response
	 * @return
	 */
	//@SuppressWarnings("null")
	@RequestMapping("/sample/write.info")
	public ModelAndView write(HttpServletRequest request, HttpServletResponse response)
	{
		userId = loginBean.getUserId();
		//userId = (String)session.getAttribute("userId");
		ModelAndView mav = new ModelAndView();

		if(userId != null && userId != "") {
			String idx = "";
			int tmpidx = 0;
			Map<String, Object> modifyMap = null;
			idx = request.getParameter("idx");

			if(idx == null || idx == "" || idx.length() <= 0){
				mav.addObject("result", modifyMap);
				mav.addObject("idx", "");
				mav.setViewName("/sample/write");
			} else {
				tmpidx = Integer.parseInt(idx);
				modifyMap = sampleService.getView(tmpidx);

				mav.setViewName("/sample/write");
				mav.addObject("result", modifyMap);
				mav.addObject("idx", idx);
			}
		} else {
			Map<String, Object> errorMap = new HashMap<String, Object>();
			errorMap.put("msg", "로그인이 필요한 서비스입니다.");
			errorMap.put("url", "/login/login.info");
			mav.addObject("errorMap", errorMap);
			mav.setViewName("/common/error");
		}

		return mav;
	}

	/**
	 * @desc 글 내용 보기
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/sample/view.info")
	public ModelAndView view(HttpServletRequest request, HttpServletResponse response)
	{
		ModelAndView mav = new ModelAndView();

		userId = loginBean.getUserId();
		//userId = (String)session.getAttribute("userId");

		if(userId != null && userId != "") {
			String idx = "";
			int tmpidx = 0;
			idx = request.getParameter("idx");

			if (idx != null || idx.length() != 0){
				tmpidx = Integer.parseInt(idx);

				Map<String, Object> resultMap = sampleService.getView(tmpidx);
				sampleService.updateHitCnt(tmpidx);
				mav.setViewName("/sample/view");
				mav.addObject("idx", idx);
				mav.addObject("result", resultMap);
			}
		} else {
			Map<String, Object> errorMap = new HashMap<String, Object>();
			errorMap.put("msg", "로그인이 필요한 서비스입니다.");
			errorMap.put("url", "/login/login.info");
			mav.addObject("errorMap", errorMap);
			mav.setViewName("/common/error");
		}

		return mav;
	}

	/**
	 * @desc 글 입력
	 * @param request
	 * @param response
	 */
	@RequestMapping("/sample/insert.info")
	public ModelAndView insert(HttpServletRequest request, HttpServletResponse response, InfoFileDto infoFileDto) throws Exception
	{
		userId = loginBean.getUserId();
		//userId = (String)session.getAttribute("userId");

		if(userId != null && userId != "") {
			commonUtil = new CommonUtil();
			long today = System.currentTimeMillis();

			DateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");
			String todayDate = df.format(today);
			System.out.println("오늘 날짜 : " + todayDate);

			String path = request.getSession().getServletContext().getRealPath("/");
			System.out.println("Path : " + path);

			String title = request.getParameter("title");
			String contents = request.getParameter("contents");
			String writeName = request.getParameter("writeName");
			String passwd = request.getParameter("passwd");
			String idx = request.getParameter("idx");
			MultipartFile upFile1 = infoFileDto.getUpFile1();
			String fileName1 = commonUtil.fileUpload(upFile1, request);

			Map<String, Object> insertMap = new HashMap<String, Object>();

			insertMap.put("title", title);
			insertMap.put("contents", contents);
			insertMap.put("writeName", writeName);
			insertMap.put("passwd", passwd);
			insertMap.put("uploadfile", fileName1);

			if(idx == null || idx == "" || idx.length() <= 0) {
				this.sampleService.insertItem(insertMap);
			} else {
				int tmpidx = Integer.parseInt(idx);
				insertMap.put("idx", tmpidx);
				this.sampleService.updateItem(insertMap);
			}
		} else {
			ModelAndView mav = new ModelAndView();
			Map<String, Object> errorMap = new HashMap<String, Object>();
			errorMap.put("msg", "로그인이 필요한 서비스입니다.");
			errorMap.put("url", "/login/login.info");
			mav.addObject("errorMap", errorMap);
			mav.setViewName("/common/error");
			return mav;
		}

		return new ModelAndView("redirect:/sample/list.info");
	}

	/**
	 * @desc 글 삭제
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/sample/delete.info")
	public ModelAndView delete(HttpServletRequest request, HttpServletResponse response)
	{
		userId = loginBean.getUserId();
		//userId = (String)session.getAttribute("userId");

		if(userId != null && userId != "") {
			int idx = 0;
			String tmpidx = request.getParameter("idx");
			idx = Integer.parseInt(tmpidx);

			Map<String, Object> deleteMap = new HashMap<String, Object>();
			deleteMap.put("idx", idx);

			this.sampleService.deleteItem(deleteMap);
		} else {
			ModelAndView mav = new ModelAndView();
			Map<String, Object> errorMap = new HashMap<String, Object>();
			errorMap.put("msg", "로그인이 필요한 서비스입니다.");
			errorMap.put("url", "/login/login.info");
			mav.addObject("errorMap", errorMap);
			mav.setViewName("/common/error");
			return mav;
		}

		return new ModelAndView("redirect:/sample/list.info");
	}

	/**
	 * @Description 파일 다운로드
	 * @param req
	 * @param res
	 * @throws Exception
	 */
	@RequestMapping("/down/fileDown.info")
	public void fileDown(HttpServletRequest req, HttpServletResponse res) throws Exception {

		commonUtil = new CommonUtil();
		String fileName = "";
		String filePath = "";
		String uploadFile = "";
		int tmpidx = 0;

		String idx = req.getParameter("idx");

		if (idx != null || idx.length() != 0){
			tmpidx = Integer.parseInt(idx);
			Map<String, Object> resultMap = sampleService.getView(tmpidx);

			uploadFile = (String)resultMap.get("UPLOADFILE");
			int pos = uploadFile.lastIndexOf("/");
			fileName = uploadFile.substring(pos + 1);
			filePath = uploadFile.substring(0, pos);
			commonUtil.fileDownload(fileName, filePath, req, res);
		}
	}

}
