package com.eye2web.infosys.util;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.net.URLEncoder;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.jxls.transformer.XLSTransformer;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.ClientAnchor;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.Drawing;
import org.apache.poi.ss.usermodel.Picture;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.util.IOUtils;
import org.apache.poi.xssf.streaming.SXSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFShape;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.web.multipart.MultipartFile;

public class CommonUtil {

	/**
	 *
	 * @param msg
	 * @param url
	 * @return
	 */
	public Map<String, Object> rtMap(String msg, String url) {

		Map<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("msg", msg);
		resultMap.put("url", url);

		return resultMap;
	}

	/**
	 * @Description HttpServletRequest to Map
	 * @param req
	 * @return
	 */
	public Map<String, Object> convertReqToMap(HttpServletRequest req) {

		Map<String, Object> resultMap = new HashMap<String, Object>();
		String strKey = "";

		for (Enumeration e = req.getParameterNames(); e.hasMoreElements();) {
			strKey = (String)e.nextElement();
			resultMap.put(strKey, req.getParameter(strKey));
		}

		return resultMap;
	}

	/**
	 * @Description Save file and return save path
	 * @param upfile
	 * @param req
	 * @return
	 */
	public String fileUpload(MultipartFile upfile, HttpServletRequest req) {

		String result = "";
		String filename = "";
		String filepath = "";

		if(upfile != null) {
			filename = upfile.getOriginalFilename();
			System.out.println("File Name : " + filename);

			long today = System.currentTimeMillis();
			DateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");
			String todayDate = df.format(today);

			String path = req.getSession().getServletContext().getRealPath("/");
			System.out.println("Path1 : " + path);

			File dir = new File(path + "/upload/" + todayDate + "/");

			if(!dir.exists()) {
				dir.mkdir();
			}

			try {
				File file = new File(path + "/upload/" + todayDate + "/" + filename);
				upfile.transferTo(file);
				filepath = "/upload/" + todayDate + "/" + filename;
				result = filepath;
				System.out.println("Save Path : " +  filepath);
			} catch(Exception e) {
				e.toString();
				result = "/upload/noimg.jpg";
			}

		} else {
			result = "/upload/noimg.jpg";
		}

		return result;
	}

	/**
	 * @Description Excel File Download
	 * @param excelMap
	 * @param gu
	 */
	public void excelDownload(Map excelMap, String gu, String excelName, HttpServletResponse response, HttpServletRequest request, String reportLocation, String path, String excelgu) throws Exception {

		long today = System.currentTimeMillis();
		DateFormat df = new SimpleDateFormat("yyMMdd");
		DateFormat df2 = new SimpleDateFormat("yyyyMMddHHmmss");
		String todayDate = df.format(today);
		String fileDate = df2.format(today);
		String templateFilePath = "";
		String infoNo = "";
		String reportNo = "";
		String fileExt = "";
		int pictureIdx = 0;
		//String path = request.getSession().getServletContext().getRealPath("/");

		if(excelgu != "excel2") {
			templateFilePath = reportLocation + "/infoExcel.xlsx";    // excel template
		} else {
			templateFilePath = reportLocation + "/wearcheckExcel.xlsx";    // wearcheck excel template
		}
		String downFile = excelName.trim() + "_" + fileDate + ".xlsx";
		System.out.println("다운로드할 엑셀파일명 : " + downFile);
		System.out.println("template Location : " + templateFilePath);

		if(excelgu != "excel2") {
			infoNo = String.format("%04d", excelMap.get("IDX"));
			reportNo = todayDate + "-" + infoNo;
		} else {
			reportNo = todayDate;
		}
		excelMap.put("reportNo", reportNo);

		File excelFile = new File(templateFilePath);
		XLSTransformer transformer = new XLSTransformer();

		Workbook wb = new SXSSFWorkbook(100);
		//Workbook wb = transformer.transformXLS(new FileInputStream(excelFile), excelMap);
		wb = transformer.transformXLS(new FileInputStream(excelFile), excelMap);

		Iterator rowIterator = wb.getSheetAt(0).rowIterator();
		while(rowIterator.hasNext()) {
			Row row =  (Row) rowIterator.next();
			Iterator cellIter = row.cellIterator();
			while (cellIter.hasNext()){
				Cell cell = (Cell) cellIter.next();
				final String IMG_PREFIX = "#IMG#";
				if(cell.toString().startsWith(IMG_PREFIX)){
					System.out.println("이미지 Prefix가 있을 경우");
					String cellValue = cell.toString();
					cell.setCellValue("");
					String imagePath = cellValue.replaceFirst(IMG_PREFIX, "");
					fileExt = this.fileExt(imagePath);
					System.out.println("이미지파일 : " + imagePath);
					File imageFile = new File(path + imagePath);
					if(imageFile.exists()){
						System.out.println("이미지 파일이 있을 경우");
						FileInputStream isi = new FileInputStream(imageFile);
                        //ImageTools imageTools = new ImageTools();
                        //byte[] imgBytes = imageTools.resizeImage(isi, 100);
						byte[] imgBytes = IOUtils.toByteArray(isi);
						if(fileExt.equals("jpg") ||  fileExt.equals("JPG") || fileExt.equals("jpeg")) {
							pictureIdx = wb.addPicture(imgBytes, Workbook.PICTURE_TYPE_JPEG);
						} else if(fileExt.equals("png") || fileExt.equals("PNG")) {
							pictureIdx = wb.addPicture(imgBytes, Workbook.PICTURE_TYPE_PNG);
						} else if(fileExt.equals("gif") || fileExt.equals("GIF")) {
							pictureIdx = wb.addPicture(imgBytes, XSSFWorkbook.PICTURE_TYPE_GIF);
						}
                        CreationHelper helper = wb.getCreationHelper();

                        Drawing drawing = wb.getSheetAt(0).createDrawingPatriarch();
                        ClientAnchor anchor = helper.createClientAnchor();
                        anchor.setDx1(30 * XSSFShape.EMU_PER_PIXEL);
                        anchor.setDx2(100 * XSSFShape.EMU_PER_PIXEL);
                        anchor.setDy1(30 * XSSFShape.EMU_PER_PIXEL);
                        anchor.setDy2(100 * XSSFShape.EMU_PER_PIXEL);

                        anchor.setCol1(cell.getColumnIndex());
                        anchor.setRow1(cell.getRowIndex());
                        //double scale = 0.7;
                        Picture pict = drawing.createPicture(anchor, pictureIdx);
                        //pict.resize(scale);
                        pict.resize();
                        System.out.println("insert image success !!!");
                        isi.close();
					}
				}
			}
		}

		response.setHeader( "Content-disposition", "attachment;filename=" + URLEncoder.encode(downFile,"UTF-8"));
		response.setContentType("application/x-msexcel");

		wb.write(response.getOutputStream());

		response.getOutputStream().flush();
		response.getOutputStream().close();
	}

	/**
	 * @Description File Download
	 * @param fileName
	 * @param filePath
	 * @param req
	 * @param res
	 * @throws Exception
	 */
	public void fileDownload(String fileName, String filePath, HttpServletRequest req, HttpServletResponse res) throws Exception {

		String strFilenameOutput=new String(fileName.getBytes("euc-kr"),"8859_1");
		String path = req.getSession().getServletContext().getRealPath("/");
		File file=new File(path + filePath + "/" + fileName);

		byte b[]=new byte[(int)file.length()];
		res.setHeader("Content-Disposition","attachment;filename="+strFilenameOutput);
		res.setHeader("Content-Length",String.valueOf(file.length()));
		if(file.isFile()){
			BufferedInputStream fin=new BufferedInputStream(new FileInputStream(file));
			BufferedOutputStream outs=new BufferedOutputStream(res.getOutputStream());
			int read=0;
			while((read=fin.read(b))!=-1){outs.write(b,0,read);}
			outs.close();
			fin.close();
		}

	}

	public String fileExt(String filename) throws Exception {
		return filename.substring(filename.lastIndexOf(".")+1,filename.length());
	}

}
